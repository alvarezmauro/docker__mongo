version: '3.6'
# usage:
# docker-compose build
# docker-compose up

services:
  mongo-server:
    image: mongo
    container_name: mongo-server
    ports:
      - ${MONGO_PORT}:27017
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      # seeding scripts
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      # named volumes
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - mongo_net

  mongo-client:
    # build will get tagged with 'image'
    build: ./mongo-client
    image: mongo-client
    container_name: mongo-client
    environment:
      - MONGO_SERVER=mongo-server
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    networks:
      - mongo_net
    depends_on:
      - mongo-server
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_AUTH_DATABASE: test
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo-server
    networks:
      - mongo_net
    depends_on:
      - mongo-server

volumes:
  # default dir on Ubuntu: /var/lib/docker/volumes
  mongodb:
  mongoconfig:

networks:
  mongo_net:
    driver: bridge
